#!/usr/bin/env ruby

require 'fileutils'
require 'yaml'

RELEASES        = ["stable", "testing"]
RELEASE_SOURCE  = 'https://gitlab.com/calyxos/release'
RELEASE_DL_BASE = 'https://release.calyxinstitute.org/'
HOME            = File.expand_path('..', __FILE__)
RELEASE_CACHE   = "#{HOME}/releases"
DEST_FILE       = "#{HOME}/pages/_data/downloads.yml"

CODENAME_MAP = {
  "walleye"        => "Pixel 2",
  "taimen"         => "Pixel 2 XL",
  "blueline"       => "Pixel 3",
  "crosshatch"     => "Pixel 3 XL",
  "sargo"          => "Pixel 3a",
  "bonito"         => "Pixel 3a XL",
  "flame"          => "Pixel 4",
  "coral"          => "Pixel 4 XL",
  "jasmine_sprout" => "Xiaomi Mi A2"
}

def main
  unless File.exist?(RELEASE_CACHE)
    clone_release_repo
  end
  #update_release_repo
  releases = parse_releases
  releases["releases"] = RELEASES
  File.open(DEST_FILE, 'w') do |f|
    f.write releases.to_yaml
  end
  puts "DONE"
  exit
end

def clone_release_repo
  FileUtils.mkdir(RELEASE_CACHE)
  Dir.chdir(RELEASE_CACHE) do
    `git clone #{RELEASE_SOURCE} .`
  end
end

def update_release_repo
  Dir.chdir(RELEASE_CACHE) do
    `git pull`
  end
end

def parse_releases
  releases = {}
  RELEASES.each do |release|
    releases[release] = parse_release(release)
  end
  return releases
end

def parse_release(release)
  info = []
  Dir.chdir(RELEASE_CACHE) do
    CODENAME_MAP.each do |codename, device|
      release_filename = codename + "-" + release
      unless File.exist?(release_filename)
        puts "SKIPPED #{codename}"
        next
      end
      release_file = File.read(release_filename)
      build_number, timestamp, build_id = release_file.split(' ')
      date = build_number.split('.')[0..2].join('-')
      info << {
        "name" => device,
        "codename" => codename,
        "link" => RELEASE_DL_BASE + codename + "-factory-#{build_number}.zip",
        "date" => date
      }
      puts "FINISHED #{codename}"
    end
  end
  return info
end

main()